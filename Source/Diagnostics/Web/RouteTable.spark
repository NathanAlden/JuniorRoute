<div class="route-table-view">
	<h1>Route Table</h1>
	<table>
		<thead>
			<tr>
				<td class="request-header" colspan="${VisibleRestrictionTypeColumns}">Request</td>
				<td class="response-header" rowspan="2" colspan="4">Response</td>
			</tr>
			<tr>
				<td class="request-header ${ColumnVisibilityCss<MethodRestriction>()}" rowspan="2">Methods</td>
				<td class="request-header ${ColumnVisibilityCss<RelativeUrlRestriction>()}" rowspan="2">Relative URLs</td>
				<td class="request-header ${ColumnVisibilityCss<UrlSchemeRestriction>()}" rowspan="2">Schemes</td>
				<td class="request-header ${ColumnVisibilityCss<UrlHostRestriction>()}" rowspan="2">Hosts</td>
				<td class="request-header ${ColumnVisibilityCss<UrlHostTypeRestriction>()}" rowspan="2">Host Types</td>
				<td class="request-header ${ColumnVisibilityCss<UrlPortRestriction>()}" rowspan="2">Ports</td>
				<td class="request-header ${ColumnVisibilityCss<UrlPathAndQueryRestriction>()}" rowspan="2">Paths and Queries</td>
				<td class="request-header ${ColumnVisibilityCss<UrlLocalPathRestriction>()}" rowspan="2">Local Paths</td>
				<td class="request-header ${ColumnVisibilityCss<UrlQueryRestriction>()}" rowspan="2">Queries</td>
				<td class="request-header ${ColumnVisibilityCss<UrlQueryStringRestriction>()}" colspan="2">Query Strings</td>
				<td class="request-header ${ColumnVisibilityCss<UrlFragmentRestriction>()}" rowspan="2">Fragments</td>
				<td class="request-header ${ColumnVisibilityCss<RefererUrlSchemeRestriction>()}" rowspan="2">Referer Schemes</td>
				<td class="request-header ${ColumnVisibilityCss<RefererUrlHostRestriction>()}" rowspan="2">Referer Hosts</td>
				<td class="request-header ${ColumnVisibilityCss<RefererUrlHostTypeRestriction>()}" rowspan="2">Referer Host Types</td>
				<td class="request-header ${ColumnVisibilityCss<RefererUrlPortRestriction>()}" rowspan="2">Referer Ports</td>
				<td class="request-header ${ColumnVisibilityCss<RefererUrlPathAndQueryRestriction>()}" rowspan="2">Referer Paths and Queries</td>
				<td class="request-header ${ColumnVisibilityCss<RefererUrlLocalPathRestriction>()}" rowspan="2">Referer Local Paths</td>
				<td class="request-header ${ColumnVisibilityCss<RefererUrlQueryRestriction>()}" rowspan="2">Referer Queries</td>
				<td class="request-header ${ColumnVisibilityCss<RefererUrlQueryStringRestriction>()}" colspan="2">Referer Query Strings</td>
				<td class="request-header ${ColumnVisibilityCss<RefererUrlFragmentRestriction>()}" rowspan="2">Referer Fragments</td>
				<td class="request-header ${ColumnVisibilityCss<CookieRestriction>()}" colspan="2">Cookies</td>
				<td class="request-header ${ColumnVisibilityCss<HeaderRestriction>()}" colspan="2">Headers</td>
			</tr>
			<tr>
				<td class="request-header ${ColumnVisibilityCss<UrlQueryStringRestriction>()}">Field</td>
				<td class="request-header ${ColumnVisibilityCss<UrlQueryStringRestriction>()}">Value</td>
				<td class="request-header ${ColumnVisibilityCss<RefererUrlQueryStringRestriction>()}">Field</td>
				<td class="request-header ${ColumnVisibilityCss<RefererUrlQueryStringRestriction>()}">Value</td>
				<td class="request-header ${ColumnVisibilityCss<CookieRestriction>()}">Name</td>
				<td class="request-header ${ColumnVisibilityCss<CookieRestriction>()}">Value</td>
				<td class="request-header ${ColumnVisibilityCss<HeaderRestriction>()}">Field</td>
				<td class="request-header ${ColumnVisibilityCss<HeaderRestriction>()}">Value</td>
				<td class="response-header">Class</td>
				<td class="response-header">Status Code</td>
				<td class="response-header">Content Type</td>
				<td class="response-header">Encoding</td>
			</tr>
		</thead>
		<tbody>
			<for each="var route in Routes">
				<tr>
					<td class="${ColumnVisibilityCss<MethodRestriction>()}">
						<if condition="route.HasRestrictions<MethodRestriction>()">
							${String.Join(", ", route.GetRestrictions<MethodRestriction>().Select(arg => arg.Method))}
						</if>
						<else>
							<span class="unimportant">Any</span>
						</else>
					</td>
					<td class="no-wrap ${ColumnVisibilityCss<RelativeUrlRestriction>()}">
						<if condition="route.HasRestrictions<RelativeUrlRestriction>()">
							<table class="flags-table">
								<tbody>
									<for each="var restriction in route.GetRestrictions<RelativeUrlRestriction>().OrderBy(arg => arg.RelativeUrl)">
										<tr>
											<td>${restriction.RelativeUrl}</td>
											<td class="flags">
												<if condition="restriction.Comparer is CaseInsensitiveRegexRequestValueComparer || restriction.Comparer is CaseSensitiveRegexRequestValueComparer">
													<span class="flag regular-expression-flag" title="Regular expression">RX</span>
												</if>
												<if condition="restriction.Comparer is CaseSensitivePlainRequestValueComparer || restriction.Comparer is CaseSensitiveRegexRequestValueComparer">
													<span class="flag case-sensitive-flag" title="Case-sensitive">CS</span>
												</if>
											</td>
										</tr>
									</for>
								</tbody>
							</table>
						</if>
						<else>
							<span class="unimportant">Any</span>
						</else>
					</td>
					<td class="${ColumnVisibilityCss<UrlSchemeRestriction>()}">
						<if condition="route.HasRestrictions<UrlSchemeRestriction>()">
							${String.Join(", ", route.GetRestrictions<UrlSchemeRestriction>().Select(arg => arg.Scheme))}
						</if>
						<else>
							<span class="unimportant">Any</span>
						</else>
					</td>
					<td class="${ColumnVisibilityCss<UrlHostRestriction>()}">
						<if condition="route.HasRestrictions<UrlHostRestriction>()">
							${String.Join("<br />", route.GetRestrictions<UrlHostRestriction>().Select(arg => arg.Host))}
						</if>
						<else>
							<span class="unimportant">Any</span>
						</else>
					</td>
					<td class="${ColumnVisibilityCss<UrlHostTypeRestriction>()}">
						<if condition="route.HasRestrictions<UrlHostTypeRestriction>()">
							${String.Join(", ", route.GetRestrictions<UrlHostTypeRestriction>().Select(arg => MapUriHostNameType(arg.Type)))}
						</if>
						<else>
							<span class="unimportant">Any</span>
						</else>
					</td>
					<td class="${ColumnVisibilityCss<UrlPortRestriction>()}">
						<if condition="route.HasRestrictions<UrlPortRestriction>()">
							${String.Join(", ", route.GetRestrictions<UrlPortRestriction>().Select(arg => arg.Port))}
						</if>
						<else>
							<span class="unimportant">Any</span>
						</else>
					</td>
					<td class="${ColumnVisibilityCss<UrlPathAndQueryRestriction>()}">
						<if condition="route.HasRestrictions<UrlPathAndQueryRestriction>()">
							<table class="flags-table">
								<tbody>
									<for each="var restriction in route.GetRestrictions<UrlPathAndQueryRestriction>()">
										<tr>
											<td class="no-wrap">${restriction.PathAndQuery}</td>
											<td class="flags">
												<if condition="restriction.Comparer is CaseInsensitiveRegexRequestValueComparer || restriction.Comparer is CaseSensitiveRegexRequestValueComparer">
													<span class="flag regular-expression-flag" title="Regular expression">RX</span>
												</if>
												<if condition="restriction.Comparer is CaseSensitivePlainRequestValueComparer || restriction.Comparer is CaseSensitiveRegexRequestValueComparer">
													<span class="flag case-sensitive-flag" title="Case-sensitive">CS</span>
												</if>
											</td>
										</tr>
									</for>
								</tbody>
							</table>
						</if>
						<else>
							<span class="unimportant">Any</span>
						</else>
					</td>
					<td class="${ColumnVisibilityCss<UrlLocalPathRestriction>()}">
						<if condition="route.HasRestrictions<UrlLocalPathRestriction>()">
							<table class="flags-table">
								<tbody>
									<for each="var restriction in route.GetRestrictions<UrlLocalPathRestriction>()">
										<tr>
											<td class="no-wrap">${restriction.LocalPath}</td>
											<td class="flags">
												<if condition="restriction.Comparer is CaseInsensitiveRegexRequestValueComparer || restriction.Comparer is CaseSensitiveRegexRequestValueComparer">
													<span class="flag regular-expression-flag" title="Regular expression">RX</span>
												</if>
												<if condition="restriction.Comparer is CaseSensitivePlainRequestValueComparer || restriction.Comparer is CaseSensitiveRegexRequestValueComparer">
													<span class="flag case-sensitive-flag" title="Case-sensitive">CS</span>
												</if>
											</td>
										</tr>
									</for>
								</tbody>
							</table>
						</if>
						<else>
							<span class="unimportant">Any</span>
						</else>
					</td>
					<td class="${ColumnVisibilityCss<UrlQueryRestriction>()}">
						<if condition="route.HasRestrictions<UrlQueryRestriction>()">
							<table class="flags-table">
								<tbody>
									<for each="var restriction in route.GetRestrictions<UrlQueryRestriction>()">
										<tr>
											<td class="no-wrap">${restriction.Query}</td>
											<td class="flags">
												<if condition="restriction.Comparer is CaseInsensitiveRegexRequestValueComparer || restriction.Comparer is CaseSensitiveRegexRequestValueComparer">
													<span class="flag regular-expression-flag" title="Regular expression">RX</span>
												</if>
												<if condition="restriction.Comparer is CaseSensitivePlainRequestValueComparer || restriction.Comparer is CaseSensitiveRegexRequestValueComparer">
													<span class="flag case-sensitive-flag" title="Case-sensitive">CS</span>
												</if>
											</td>
										</tr>
									</for>
								</tbody>
							</table>
						</if>
						<else>
							<span class="unimportant">Any</span>
						</else>
					</td>
					<if condition="route.HasRestrictions<UrlQueryStringRestriction>()">
						<td>
							<for each="var restriction in route.GetRestrictions<UrlQueryStringRestriction>()">
								<table class="flags-table">
									<tbody>
										<tr>
											<td class="no-wrap">${restriction.Field}</td>
											<td class="flags">
												<if condition="restriction.FieldComparer is CaseInsensitiveRegexRequestValueComparer || restriction.FieldComparer is CaseSensitiveRegexRequestValueComparer">
													<span class="flag regular-expression-flag" title="Regular expression">RX</span>
												</if>
												<if condition="restriction.FieldComparer is CaseSensitivePlainRequestValueComparer || restriction.FieldComparer is CaseSensitiveRegexRequestValueComparer">
													<span class="flag case-sensitive-flag" title="Case-sensitive">CS</span>
												</if>
											</td>
										</tr>
									</tbody>
								</table>
							</for>
						</td>
						<td>
							<for each="var restriction in route.GetRestrictions<UrlQueryStringRestriction>()">
								<table class="flags-table">
									<tbody>
										<tr>
											<td class="no-wrap">${restriction.Value}</td>
											<td class="flags">
												<if condition="restriction.ValueComparer is CaseInsensitiveRegexRequestValueComparer || restriction.ValueComparer is CaseSensitiveRegexRequestValueComparer">
													<span class="flag regular-expression-flag" title="Regular expression">RX</span>
												</if>
												<if condition="restriction.ValueComparer is CaseSensitivePlainRequestValueComparer || restriction.ValueComparer is CaseSensitiveRegexRequestValueComparer">
													<span class="flag case-sensitive-flag" title="Case-sensitive">CS</span>
												</if>
											</td>
										</tr>
									</tbody>
								</table>
							</for>
						</td>
					</if>
					<else>
						<td class="${ColumnVisibilityCss<UrlQueryStringRestriction>()}" colspan="2">
							<span class="unimportant">Any</span>
						</td>
					</else>
					<td class="${ColumnVisibilityCss<UrlFragmentRestriction>()}">
						<if condition="route.HasRestrictions<UrlFragmentRestriction>()">
							${String.Join("<br />", route.GetRestrictions<UrlFragmentRestriction>().Select(arg => arg.Fragment))}
						</if>
						<else>
							<span class="unimportant">Any</span>
						</else>
					</td>
					<td class="${ColumnVisibilityCss<RefererUrlSchemeRestriction>()}">
						<if condition="route.HasRestrictions<RefererUrlSchemeRestriction>()">
							${String.Join(", ", route.GetRestrictions<RefererUrlSchemeRestriction>().Select(arg => arg.Scheme))}
						</if>
						<else>
							<span class="unimportant">Any</span>
						</else>
					</td>
					<td class="${ColumnVisibilityCss<RefererUrlHostRestriction>()}">
						<if condition="route.HasRestrictions<RefererUrlHostRestriction>()">
							${String.Join("<br />", route.GetRestrictions<RefererUrlHostRestriction>().Select(arg => arg.Host))}
						</if>
						<else>
							<span class="unimportant">Any</span>
						</else>
					</td>
					<td class="${ColumnVisibilityCss<RefererUrlHostTypeRestriction>()}">
						<if condition="route.HasRestrictions<RefererUrlHostTypeRestriction>()">
							${String.Join(", ", route.GetRestrictions<RefererUrlHostTypeRestriction>().Select(arg => MapUriHostNameType(arg.Type)))}
						</if>
						<else>
							<span class="unimportant">Any</span>
						</else>
					</td>
					<td class="${ColumnVisibilityCss<RefererUrlPortRestriction>()}">
						<if condition="route.HasRestrictions<RefererUrlPortRestriction>()">
							${String.Join(", ", route.GetRestrictions<RefererUrlPortRestriction>().Select(arg => arg.Port))}
						</if>
						<else>
							<span class="unimportant">Any</span>
						</else>
					</td>
					<td class="${ColumnVisibilityCss<RefererUrlPathAndQueryRestriction>()}">
						<if condition="route.HasRestrictions<RefererUrlPathAndQueryRestriction>()">
							<table class="flags-table">
								<tbody>
									<for each="var restriction in route.GetRestrictions<RefererUrlPathAndQueryRestriction>()">
										<tr>
											<td class="no-wrap">${restriction.PathAndQuery}</td>
											<td class="flags">
												<if condition="restriction.Comparer is CaseInsensitiveRegexRequestValueComparer || restriction.Comparer is CaseSensitiveRegexRequestValueComparer">
													<span class="flag regular-expression-flag" title="Regular expression">RX</span>
												</if>
												<if condition="restriction.Comparer is CaseSensitivePlainRequestValueComparer || restriction.Comparer is CaseSensitiveRegexRequestValueComparer">
													<span class="flag case-sensitive-flag" title="Case-sensitive">CS</span>
												</if>
											</td>
										</tr>
									</for>
								</tbody>
							</table>
						</if>
						<else>
							<span class="unimportant">Any</span>
						</else>
					</td>
					<td class="${ColumnVisibilityCss<RefererUrlLocalPathRestriction>()}">
						<if condition="route.HasRestrictions<RefererUrlLocalPathRestriction>()">
							<table class="flags-table">
								<tbody>
									<for each="var restriction in route.GetRestrictions<RefererUrlLocalPathRestriction>()">
										<tr>
											<td class="no-wrap">${restriction.LocalPath}</td>
											<td class="flags">
												<if condition="restriction.Comparer is CaseInsensitiveRegexRequestValueComparer || restriction.Comparer is CaseSensitiveRegexRequestValueComparer">
													<span class="flag regular-expression-flag" title="Regular expression">RX</span>
												</if>
												<if condition="restriction.Comparer is CaseSensitivePlainRequestValueComparer || restriction.Comparer is CaseSensitiveRegexRequestValueComparer">
													<span class="flag case-sensitive-flag" title="Case-sensitive">CS</span>
												</if>
											</td>
										</tr>
									</for>
								</tbody>
							</table>
						</if>
						<else>
							<span class="unimportant">Any</span>
						</else>
					</td>
					<td class="${ColumnVisibilityCss<RefererUrlQueryRestriction>()}">
						<if condition="route.HasRestrictions<RefererUrlQueryRestriction>()">
							<table class="flags-table">
								<tbody>
									<for each="var restriction in route.GetRestrictions<RefererUrlQueryRestriction>()">
										<tr>
											<td class="no-wrap">${restriction.Query}</td>
											<td class="flags">
												<if condition="restriction.Comparer is CaseInsensitiveRegexRequestValueComparer || restriction.Comparer is CaseSensitiveRegexRequestValueComparer">
													<span class="flag regular-expression-flag" title="Regular expression">RX</span>
												</if>
												<if condition="restriction.Comparer is CaseSensitivePlainRequestValueComparer || restriction.Comparer is CaseSensitiveRegexRequestValueComparer">
													<span class="flag case-sensitive-flag" title="Case-sensitive">CS</span>
												</if>
											</td>
										</tr>
									</for>
								</tbody>
							</table>
						</if>
						<else>
							<span class="unimportant">Any</span>
						</else>
					</td>
					<if condition="route.HasRestrictions<RefererUrlQueryStringRestriction>()">
						<td>
							<for each="var restriction in route.GetRestrictions<RefererUrlQueryStringRestriction>()">
								<table class="flags-table">
									<tbody>
										<tr>
											<td class="no-wrap">${restriction.Field}</td>
											<td class="flags">
												<if condition="restriction.FieldComparer is CaseInsensitiveRegexRequestValueComparer || restriction.FieldComparer is CaseSensitiveRegexRequestValueComparer">
													<span class="flag regular-expression-flag" title="Regular expression">RX</span>
												</if>
												<if condition="restriction.FieldComparer is CaseSensitivePlainRequestValueComparer || restriction.FieldComparer is CaseSensitiveRegexRequestValueComparer">
													<span class="flag case-sensitive-flag" title="Case-sensitive">CS</span>
												</if>
											</td>
										</tr>
									</tbody>
								</table>
							</for>
						</td>
						<td>
							<for each="var restriction in route.GetRestrictions<RefererUrlQueryStringRestriction>()">
								<table class="flags-table">
									<tbody>
										<tr>
											<td class="no-wrap">${restriction.Value}</td>
											<td class="flags">
												<if condition="restriction.ValueComparer is CaseInsensitiveRegexRequestValueComparer || restriction.ValueComparer is CaseSensitiveRegexRequestValueComparer">
													<span class="flag regular-expression-flag" title="Regular expression">RX</span>
												</if>
												<if condition="restriction.ValueComparer is CaseSensitivePlainRequestValueComparer || restriction.ValueComparer is CaseSensitiveRegexRequestValueComparer">
													<span class="flag case-sensitive-flag" title="Case-sensitive">CS</span>
												</if>
											</td>
										</tr>
									</tbody>
								</table>
							</for>
						</td>
					</if>
					<else>
						<td class="${ColumnVisibilityCss<RefererUrlQueryStringRestriction>()}" colspan="2">
							<span class="unimportant">Any</span>
						</td>
					</else>
					<td class="${ColumnVisibilityCss<RefererUrlFragmentRestriction>()}">
						<if condition="route.HasRestrictions<RefererUrlFragmentRestriction>()">
							${String.Join("<br />", route.GetRestrictions<RefererUrlFragmentRestriction>().Select(arg => arg.Fragment))}
						</if>
						<else>
							<span class="unimportant">Any</span>
						</else>
					</td>
					<if condition="route.HasRestrictions<CookieRestriction>()">
						<td>
							<for each="var restriction in route.GetRestrictions<CookieRestriction>()">
								<table class="flags-table">
									<tbody>
										<tr>
											<td class="no-wrap">${restriction.Name}</td>
											<td class="flags">
												<if condition="restriction.NameComparer is CaseInsensitiveRegexRequestValueComparer || restriction.NameComparer is CaseSensitiveRegexRequestValueComparer">
													<span class="flag regular-expression-flag" title="Regular expression">RX</span>
												</if>
												<if condition="restriction.NameComparer is CaseSensitivePlainRequestValueComparer || restriction.NameComparer is CaseSensitiveRegexRequestValueComparer">
													<span class="flag case-sensitive-flag" title="Case-sensitive">CS</span>
												</if>
											</td>
										</tr>
									</tbody>
								</table>
							</for>
						</td>
						<td>
							<for each="var restriction in route.GetRestrictions<CookieRestriction>()">
								<table class="flags-table">
									<tbody>
										<tr>
											<td class="no-wrap">${restriction.Value}</td>
											<td class="flags">
												<if condition="restriction.ValueComparer is CaseInsensitiveRegexRequestValueComparer || restriction.ValueComparer is CaseSensitiveRegexRequestValueComparer">
													<span class="flag regular-expression-flag" title="Regular expression">RX</span>
												</if>
												<if condition="restriction.ValueComparer is CaseSensitivePlainRequestValueComparer || restriction.ValueComparer is CaseSensitiveRegexRequestValueComparer">
													<span class="flag case-sensitive-flag" title="Case-sensitive">CS</span>
												</if>
											</td>
										</tr>
									</tbody>
								</table>
							</for>
						</td>
					</if>
					<else>
						<td class="${ColumnVisibilityCss<CookieRestriction>()}" colspan="2">
							<span class="unimportant">Any</span>
						</td>
					</else>
					<if condition="route.HasRestrictions<HeaderRestriction>()">
						<td>
							${String.Join("<br />", route.GetRestrictions<HeaderRestriction>().Select(arg => arg.Field))}
						</td>
						<td>
							<for each="var restriction in route.GetRestrictions<HeaderRestriction>()">
								<table class="flags-table">
									<tbody>
										<tr>
											<td class="no-wrap">${restriction.Value}</td>
											<td class="flags">
												<if condition="restriction.ValueComparer is CaseInsensitiveRegexRequestValueComparer || restriction.ValueComparer is CaseSensitiveRegexRequestValueComparer">
													<span class="flag regular-expression-flag" title="Regular expression">RX</span>
												</if>
												<if condition="restriction.ValueComparer is CaseSensitivePlainRequestValueComparer || restriction.ValueComparer is CaseSensitiveRegexRequestValueComparer">
													<span class="flag case-sensitive-flag" title="Case-sensitive">CS</span>
												</if>
											</td>
										</tr>
									</tbody>
								</table>
							</for>
						</td>
					</if>
					<else>
						<td class="${ColumnVisibilityCss<HeaderRestriction>()}" colspan="2">
							<span class="unimportant">Any</span>
						</td>
					</else>
					<var response="route.GetResponse()" noContentResponse="route.GetResponse() as NoContentResponse" contentResponse="route.GetResponse() as ContentResponse" />
					<td>${response.GetType().Name}</td>
					<td>
						<if condition="noContentResponse != null">
							${noContentResponse.ResponseStatusCode}${noContentResponse.ResponseSubStatusCode > 0 ? "." + noContentResponse.ResponseSubStatusCode.ToString() : ""}
							${HttpWorkerRequest.GetStatusDescription(noContentResponse.ResponseStatusCode)}
						</if>
						<else condition="contentResponse != null">
							${contentResponse.ResponseStatusCode}${contentResponse.ResponseSubStatusCode > 0 ? "." + contentResponse.ResponseSubStatusCode.ToString() : ""}
							${HttpWorkerRequest.GetStatusDescription(contentResponse.ResponseStatusCode)}
						</else>
					</td>
					<if condition="contentResponse != null">
						<td>${contentResponse.ResponseContentType}</td>
						<td>${contentResponse.ResponseEncoding.EncodingName}</td>
					</if>
					<else>
						<td colspan="2"></td>
					</else>
				</tr>
			</for>
		</tbody>
	</table>
</div>